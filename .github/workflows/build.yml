name: Build Firmware

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      # 1. Checkout репозиторий
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Установка зависимостей
      - name: Install dependencies
        run: |
          sudo apt update
          # Установка GCC 9
          sudo apt install -y gcc-9 g++-9
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9
          # Установка последней доступной версии OpenSSL
          sudo apt install -y libssl-dev
          # Проверка версии OpenSSL
          openssl version

      # 3. Загрузка конфигурации
      - name: Load build configuration
        run: |
          sed -i 's|\r$||g' variables build.config
          . <(cat variables build.config)
          PADAVAN_THEMES="${PADAVAN_THEMES[*]}"
          for v in "${!PADAVAN_@}" "${!CONFIG_@}"; do
            echo "$v=${!v}" >> $GITHUB_ENV
          done

      # 4. Подготовка исходников и инструментов
      - name: Prepare sources and toolchain
        run: |
          git config --global --add safe.directory '*'
          git clone -b "$PADAVAN_BRANCH" "$PADAVAN_REPO"
          git -C padavan-ng checkout "$PADAVAN_COMMIT"
          wget -qO- "$PADAVAN_TOOLCHAIN_URL" | tar -C padavan-ng --zstd -xf -

      # 5. Сборка прошивки
      - name: Build firmware
        run: |
          cp build.config padavan-ng/trunk/.config
          pushd padavan-ng/trunk
          ./clear_tree.sh
          # Удаление проблемного флага из Makefile
          sed -i 's/-Wno-stringop-truncation//g' user/openvpn/openvpn-2.*/Makefile
          ./build_firmware.sh
          popd

      # 6. Загрузка прошивки
      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v3
        with:
          name: firmware
          path: |
            padavan-ng/trunk/images/*.trx
            padavan-ng/trunk/images/*.zip
