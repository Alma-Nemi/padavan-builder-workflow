name: Build firmware

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      options: --privileged
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt update
          apt install -y gcc libssl-dev build-essential wget git gawk bison python3 python3-pip libtool autoconf automake flex bison libelf-dev libncurses-dev zlib1g-dev liblzma-dev
          wget http://ftp.gnu.org/gnu/libc/glibc-2.34.tar.gz
          tar -xvf glibc-2.34.tar.gz
          cd glibc-2.34
          mkdir build
          cd build
          ../configure --prefix=/opt/glibc-2.34
          make -j$(nproc)
          make install
          export LD_LIBRARY_PATH=/opt/glibc-2.34/lib:$LD_LIBRARY_PATH

      - name: Get variables
        run: |
          sed -i 's|\r$||g' variables build.config
          . <(cat variables build.config)
          PADAVAN_THEMES="${PADAVAN_THEMES[*]}"
          for v in "${!PADAVAN_@}" "${!CONFIG_@}"; do
            echo "$v=${!v}" >> $GITHUB_ENV
          done

      - name: Download sources and toolchain
        run: |
          git config --global --add safe.directory '*'
          git clone -b "$PADAVAN_BRANCH" "$PADAVAN_REPO" padavan
          if [ ! -d "padavan/toolchain-mipsel" ]; then
              echo "Error: Directory 'toolchain-mipsel' not found in repository!"
              ls -R padavan
              exit 1
          fi
          cd padavan/toolchain-mipsel
          chmod +x dl_toolchain.sh
          ./dl_toolchain.sh
          cd ../../

      - name: Compile tools
        run: |
          cd padavan/uboot/mips/uboot-5.x.x.x/tools
          make clean
          make V=1 CC=gcc

      - name: Apply custom configurations
        run: |
          cp build.config padavan/trunk/configs/templates/$TNAME.config
          cd padavan/trunk
          if [ -f "../../$CUSTOM_SCRIPT" ]; then
            cp "../../$CUSTOM_SCRIPT" .
            chmod +x $CUSTOM_SCRIPT
            ./$CUSTOM_SCRIPT
          fi
          cd ../../

      - name: Compile the firmware
        run: |
          MAKEFILE_PATH=$(find . -type f -name "Makefile" | grep "openvpn")
          if [ -z \"$MAKEFILE_PATH\" ]; then
              echo \"Error: Makefile not found\"
              exit 1
          fi
          sed -i 's/-Wno-stringop-truncation//g' \"$MAKEFILE_PATH\"
          cd padavan/trunk
          fakeroot ./build_firmware_modify $TNAME 0
          mkdir -p ../firmware
          mv images/*.trx ../firmware/
          cd ../../

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: firmware
          path: padavan/firmware/*.trx
